#!/bin/bash
pushd `pwd`
WORK=`pwd`  # aflgo/tests
NAME=binutils
CVE=$1 		# first argv, e.g. 2016-4487
CVE_OUT=$WORK/$NAME/out/$CVE
CVE_FIXED_VERSION=$WORK/$NAME/obj-fixed/$CVE
CVE_OBJ_2=$WORK/$NAME/obj-2/$CVE
TARGET=${CVE_FIXED_VERSION}/binutils/cxxfilt
TARGET_2=${CVE_OBJ_2}/binutils/cxxfilt
CRASH_FILE=$CVE_OUT/target_result/crashes
OUT_ARCHIVE=$WORK/CVE-out/$CVE

rm -rf $CRASH_FILE/README.txt
for i in `ls $CRASH_FILE`
do
	`$TARGET < ${CRASH_FILE}/${i} > /dev/null`
	if [ "$?" = "0" ]
	then 
		echo "----Check the call stack. ----" 
		echo "valgrind:"
		echo "valgrind $TARGET_2 < ${CRASH_FILE}/${i}"
		valgrind $TARGET_2 < ${CRASH_FILE}/${i}
		echo "GDB:"
		echo "manual debug: press 'q' to quit."
		gdb -q -args $TARGET_2
		read -p "First expose for CVE-${CVE} found? (y/n)[n]: " found
		if [ "$found" = "y" ]
		then
			if [ ! -e $OUT_ARCHIVE ]; then mkdir $OUT_ARCHIVE; fi
			cp ${CRASH_FILE}/${i} $OUT_ARCHIVE
			echo "First expose for CVE-${CVE} found. ${i}"
			echo -e "ps | grep Fuzzer pid:\n`ps -ef | grep ${work}/../afl-fuzz | grep -v grep`"
			pid=`ps -ef | grep ${work}/../afl-fuzz | grep -v grep | awk '{print $3}'`
			#pid=`pgrep ${work}/../afl-fuzz`
			if [ $pid ]
			then 
				read -p "Kill $pid? (y/n)[n]:" killit
				if [ "$killit" = "y" ]
				then 
					kill $pid
					echo "Fuzzing terminated."
					break
				else
					echo "Fuzzing go on."
				fi
			fi
		else
			echo "This crash skipped."
		fi
	fi
done


